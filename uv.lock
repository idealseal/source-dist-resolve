version = 1
revision = 1
requires-python = ">=3.13"

[[package]]
name = "annotated-types"
version = "0.7.0"
source = { registry = "https://pypi.org/simple" }
sdist = { url = "https://files.pythonhosted.org/packages/ee/67/531ea369ba64dcff5ec9c3402f9f51bf748cec26dde048a2f973a4eea7f5/annotated_types-0.7.0.tar.gz", hash = "sha256:aff07c09a53a08bc8cfccb9c85b05f1aa9a2a6f23728d790723543408344ce89", size = 16081 }
wheels = [
    { url = "https://files.pythonhosted.org/packages/78/b6/6307fbef88d9b5ee7421e68d78a9f162e0da4900bc5f5793f6d3d0e34fb8/annotated_types-0.7.0-py3-none-any.whl", hash = "sha256:1f02e8b43a8fbbc3f3e0d4f0f4bfc8131bcb4eebe8849b8e5c773f3a1c582a53", size = 13643 },
]

[[package]]
name = "foo"
version = "0.1.0"
source = { editable = "." }
dependencies = [
    { name = "pydantic" },
    { name = "pydantic-core" },
]

[package.metadata]
requires-dist = [
    { name = "pydantic", directory = "src/foo/pydantic" },
    { name = "pydantic-core", virtual = "src/foo/pydantic-core" },
]

[[package]]
name = "pydantic"
source = { directory = "src/foo/pydantic" }
dependencies = [
    { name = "annotated-types" },
    { name = "pydantic-core" },
    { name = "typing-extensions" },
]

[package.metadata]
requires-dist = [
    { name = "annotated-types", specifier = ">=0.6.0" },
    { name = "email-validator", marker = "extra == 'email'", specifier = ">=2.0.0" },
    { name = "pydantic-core", specifier = "==2.27.2" },
    { name = "typing-extensions", specifier = ">=4.12.2" },
    { name = "tzdata", marker = "python_full_version >= '3.9' and sys_platform == 'win32' and extra == 'timezone'" },
]
provides-extras = ["email", "timezone"]

[package.metadata.requires-dev]
all = [
    { name = "ansi2html" },
    { name = "autoflake" },
    { name = "cloudpickle" },
    { name = "coverage", extras = ["toml"] },
    { name = "devtools" },
    { name = "dirty-equals" },
    { name = "eval-type-backport" },
    { name = "faker" },
    { name = "greenlet", marker = "python_full_version < '3.13'" },
    { name = "jsonschema" },
    { name = "mike" },
    { name = "mkdocs" },
    { name = "mkdocs-exclude" },
    { name = "mkdocs-material", extras = ["imaging"] },
    { name = "mkdocs-redirects" },
    { name = "mkdocstrings-python" },
    { name = "mypy" },
    { name = "packaging" },
    { name = "pydantic-extra-types", git = "https://github.com/pydantic/pydantic-extra-types.git?rev=main" },
    { name = "pydantic-settings" },
    { name = "pyright" },
    { name = "pytest" },
    { name = "pytest-benchmark" },
    { name = "pytest-codspeed" },
    { name = "pytest-examples" },
    { name = "pytest-memray", marker = "platform_python_implementation == 'CPython' and sys_platform != 'win32'" },
    { name = "pytest-mock" },
    { name = "pytest-pretty" },
    { name = "pytz" },
    { name = "pyupgrade" },
    { name = "requests" },
    { name = "ruff" },
    { name = "sqlalchemy" },
    { name = "tomli" },
]
dev = [
    { name = "coverage", extras = ["toml"] },
    { name = "dirty-equals" },
    { name = "eval-type-backport" },
    { name = "faker" },
    { name = "jsonschema" },
    { name = "packaging" },
    { name = "pytest" },
    { name = "pytest-benchmark" },
    { name = "pytest-codspeed" },
    { name = "pytest-examples" },
    { name = "pytest-memray", marker = "platform_python_implementation == 'CPython' and sys_platform != 'win32'" },
    { name = "pytest-mock" },
    { name = "pytest-pretty" },
    { name = "pytz" },
]
docs = [
    { name = "autoflake" },
    { name = "mike" },
    { name = "mkdocs" },
    { name = "mkdocs-exclude" },
    { name = "mkdocs-material", extras = ["imaging"] },
    { name = "mkdocs-redirects" },
    { name = "mkdocstrings-python" },
    { name = "pydantic-extra-types", git = "https://github.com/pydantic/pydantic-extra-types.git?rev=main" },
    { name = "pydantic-settings" },
    { name = "pyupgrade" },
    { name = "requests" },
    { name = "tomli" },
]
linting = [
    { name = "eval-type-backport" },
    { name = "pyright" },
    { name = "ruff" },
]
testing-extra = [
    { name = "ansi2html" },
    { name = "cloudpickle" },
    { name = "devtools" },
    { name = "greenlet", marker = "python_full_version < '3.13'" },
    { name = "sqlalchemy" },
]
typechecking = [
    { name = "mypy" },
    { name = "pydantic-settings" },
    { name = "pyright" },
]

[[package]]
name = "pydantic-core"
source = { virtual = "src/foo/pydantic-core" }
dependencies = [
    { name = "typing-extensions" },
]

[package.metadata]
requires-dist = [{ name = "typing-extensions", specifier = ">=4.6.0,!=4.7.0" }]

[package.metadata.requires-dev]
all = [
    { name = "backports-zoneinfo", marker = "python_full_version < '3.9'" },
    { name = "coverage" },
    { name = "dirty-equals" },
    { name = "exceptiongroup", marker = "python_full_version < '3.11'" },
    { name = "griffe" },
    { name = "hypothesis" },
    { name = "inline-snapshot" },
    { name = "maturin", specifier = ">=1,<2" },
    { name = "mypy" },
    { name = "numpy", marker = "python_full_version >= '3.9' and python_full_version < '3.13' and implementation_name == 'cpython' and platform_machine == 'x86_64'" },
    { name = "pandas", marker = "python_full_version >= '3.9' and python_full_version < '3.13' and implementation_name == 'cpython' and platform_machine == 'x86_64'" },
    { name = "pyright" },
    { name = "pytest" },
    { name = "pytest-examples", marker = "implementation_name == 'cpython' and platform_machine == 'x86_64'" },
    { name = "pytest-mock" },
    { name = "pytest-pretty" },
    { name = "pytest-speed" },
    { name = "pytest-timeout" },
    { name = "python-dateutil" },
    { name = "ruff" },
    { name = "typing-extensions" },
    { name = "tzdata" },
]
codspeed = [{ name = "pytest-codspeed", marker = "python_full_version == '3.13.*' and implementation_name == 'cpython'" }]
linting = [
    { name = "griffe" },
    { name = "mypy" },
    { name = "pyright" },
    { name = "ruff" },
]
testing = [
    { name = "backports-zoneinfo", marker = "python_full_version < '3.9'" },
    { name = "coverage" },
    { name = "dirty-equals" },
    { name = "exceptiongroup", marker = "python_full_version < '3.11'" },
    { name = "hypothesis" },
    { name = "inline-snapshot" },
    { name = "numpy", marker = "python_full_version >= '3.9' and python_full_version < '3.13' and implementation_name == 'cpython' and platform_machine == 'x86_64'" },
    { name = "pandas", marker = "python_full_version >= '3.9' and python_full_version < '3.13' and implementation_name == 'cpython' and platform_machine == 'x86_64'" },
    { name = "pytest" },
    { name = "pytest-examples", marker = "implementation_name == 'cpython' and platform_machine == 'x86_64'" },
    { name = "pytest-mock" },
    { name = "pytest-pretty" },
    { name = "pytest-speed" },
    { name = "pytest-timeout" },
    { name = "python-dateutil" },
    { name = "typing-extensions" },
    { name = "tzdata" },
]
wasm = [
    { name = "maturin", specifier = ">=1,<2" },
    { name = "ruff" },
    { name = "typing-extensions" },
]

[[package]]
name = "typing-extensions"
version = "4.12.2"
source = { registry = "https://pypi.org/simple" }
sdist = { url = "https://files.pythonhosted.org/packages/df/db/f35a00659bc03fec321ba8bce9420de607a1d37f8342eee1863174c69557/typing_extensions-4.12.2.tar.gz", hash = "sha256:1a7ead55c7e559dd4dee8856e3a88b41225abfe1ce8df57b7c13915fe121ffb8", size = 85321 }
wheels = [
    { url = "https://files.pythonhosted.org/packages/26/9f/ad63fc0248c5379346306f8668cda6e2e2e9c95e01216d2b8ffd9ff037d0/typing_extensions-4.12.2-py3-none-any.whl", hash = "sha256:04e5ca0351e0f3f85c6853954072df659d0d13fac324d0072316b67d7794700d", size = 37438 },
]
